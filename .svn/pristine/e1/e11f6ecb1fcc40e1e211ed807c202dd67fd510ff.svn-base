<?php defined('BASEPATH') OR exit('No direct script access allowed');

class Tools_model extends Base_model {

    function __construct() {
        parent::__construct();

    }    
    

    function insertTools($post_arr='',$type='') 
    {
        $this->db->set('title', $post_arr['title']);
        $this->db->set('content', $post_arr['content']);
        if(element('start_date',$post_arr))
            $this->db->set('start_date', $post_arr['start_date']);
        else
            $this->db->set('start_date', date('Y-m-d H:i:s'));
        if(element('end_date',$post_arr))
            $this->db->set('end_date', $post_arr['end_date']);
        else
            $this->db->set('end_date', date('Y-m-d H:i:s'));
        $this->db->set('image', $post_arr['userfile']);

        if(element('userfile',$post_arr)){
            $this->db->set('image', $post_arr['userfile']);
        }
        if(element('location',$post_arr)){
            $this->db->set('location', $post_arr['location']);
        }
        if(element('address',$post_arr)){
            $this->db->set('address', $post_arr['address']);
        }
        $this->db->set('type',$type);
        $res = $this->db->insert('tools');
        $this->db->cache_delete('admin', 'tools');
        return $res;
    }
    function getToolsDetails($id="",$type="",$limit='',$up_date='') 
    {

        $details = array();
        if($id)
            $this->db->where('id',$id);
        if($type)
            $this->db->where('type',$type);
        if($limit)
        {
            $this->db->where('start_date >=',$up_date);
            $this->db->limit($limit);
            $this->db->order_by('start_date','DESC');
        }
        $this->db->order_by('start_date','DESC');

        $query = $this->db->get('tools');
        $i = 0;
        foreach($query->result_array() as $row){
            $details[$i]['id'] = $row['id'];
            $details[$i]['enc_id'] = $this->Base_model->encrypt_decrypt('encrypt',$row['id']);
            $details[$i]['title'] = $row['title'];
            $details[$i]['content'] = strip_tags($row['content']);
            $details[$i]['start_date'] = $row['start_date'];
            $details[$i]['end_date'] = $row['end_date'];
            $details[$i]['update_date'] = $row['update_date'];   
            $details[$i]['image'] = $row['image'];  
            $details[$i]['image_id'] = $this->getImageId($row['image']);
            $details[$i]['type'] = $row['type'];
            $details[$i]['location'] = $row['location'];
            $details[$i]['address'] = $row['address'];
            $i++;
        } 
        return $details;
    }


    function UpdateTools($post_arr='',$type='') 
    {
        $this->db->set('title', $post_arr['title']);
        $this->db->set('content', $post_arr['content']);
        if(element('start_date',$post_arr))
            $this->db->set('start_date', $post_arr['start_date']);
        else
            $this->db->set('start_date', date('Y-m-d H:i:s'));
        if(element('end_date',$post_arr))
            $this->db->set('end_date', $post_arr['end_date']);
        else
            $this->db->set('end_date', date('Y-m-d H:i:s'));
        if(element('update_date',$post_arr))
            $this->db->set('update_date',$post_arr['update_date']);
        else
            $this->db->set('update_date', date('Y-m-d H:i:s'));

        if(element('userfile',$post_arr))
            $this->db->set('image', $post_arr['userfile']);
        if(element('location',$post_arr)){
            $this->db->set('location', $post_arr['location']);
        }
        if(element('address',$post_arr)){
            $this->db->set('address', $post_arr['address']);
        }
        $this->db->set('type',$type);
        $this->db->where('id', $post_arr['id']);
        $res = $this->db->update('tools');
        $this->db->cache_delete('admin', 'tools');
        return $res;
    }


    function deletetools($id='',$type='') 
    {
        $this->db->where('id', $id);
        $this->db->where('type', $type);
        $res = $this->db->delete('tools');
        $this->db->cache_delete('admin', 'tools');
        return $res;
    }  

    function getImages($filter='',$count=0,$type)
    {
        $images=array();
        $file_name=NULL;
        $this->db->select('*');
        $this->db->from('added_images');

        if(!empty($filter) && isset($filter['filter_name']) && $count==0) {
            $this->db->where("original_name LIKE '%".$filter['filter_name']."%'");
        }
        if($type=='news_images')
        {
            $this->db->where('type','news');
        }
        elseif($type=='event_images')
        {
            $this->db->where('type','event');
        }
        elseif($type=='efile_images')
        {
            $this->db->where('type','efile');
        }

        //pagination limits
        if (!empty($filter) && (element( 'page', $filter ) || element( 'limit', $filter ) )) {

            ($filter['page'] < 0) ? 0 : $filter['page'];
            ($filter['limit'] < 1) ? 10 : $filter['limit'];
            $this->db->limit( $filter['limit'], $filter['page'] );
        } 

        $this->db->order_by('id','DESC');

        if($count == 1) {
            $res = $this->db->get()->num_rows();
            return $res;
        }
        $query = $this->db->get();
        foreach($query->result_array() as $row)
        {
            $file_name = './assets/images/'.$type.'/'.$row['file_name'];
            if(file_exists($file_name))
            {
                $images[] = $row;
            } 
        }

        return $images;
    }

    function insertImages($details,$type)
    {

        $date=date('Y-m-d H-i-s');
        $this->db->set('original_name', $details['orig_name']);
        $this->db->set('file_name', $details['file_name']);
        $this->db->set('file_size', $details['file_size']);
        $this->db->set('mime_type', $details['image_type']);
        $this->db->set('status', 1);

        $this->db->set('sort_order', $details['sort_order']);

        if($type=='news_images')
        {
           $this->db->set('type', 'news'); 
       }
       elseif($type=='event_images')
       {
           $this->db->set('type', 'event'); 
       }
       elseif($type=='efile_images')
       {
           $this->db->set('type', 'efile'); 
       }
       $this->db->set('created',$date);
       $res = $this->db->insert('added_images'); 
       $this->db->cache_delete('admin', 'tools');
       return $res;
   }

   public function deleteGalleryImages($arr,$type){

    if(!empty($arr)) {
        if($type=='efile_images')
        {
            $file_path = './assets/images/efile_images/';
        }
        elseif($type=='news_images')
        {
            $file_path = './assets/images/news_images/';
        }
        elseif($type=='event_images')
        {
            $file_path = './assets/images/event_images/';
        }
        foreach($arr as $value) {

            $this->db->select('file_name');
            $this->db->from('added_images');
            $this->db->where('id', $value);
            $res = $this->db->get();

            if($res->row()) {

                $file_name = $res->row()->file_name;
                if (file_exists($file_path.'/'. $file_name)) {
                    unlink($file_path.'/'. $file_name);
                }
                
                $this->db->where('id', $value);
                $this->db->delete('added_images');     
            }

        }
    }
    return true;
}


function createDbBackup()
{
    $this->load->dbutil();
    $this->load->helper(array('file', 'download')); 
    $filename = date("Y-m-d-H-i-s") ;

    $prefs = array(
        'tables'        => array(),  
        'ignore'        => array('104_countries', '104_currency'),         
            'format'        => 'zip',              // gzip, zip, txt
            'filename'      => $filename.'.sql',       
            'add_drop'      => TRUE,      
            'add_insert'    => TRUE,     
            'newline'       => "\n"       
        );

    $backup = $this->dbutil->backup($prefs);        
    $backup_path = 'backups/db/';        
    $backup_file = FCPATH. $backup_path . $filename. "." . $prefs["format"]; 
    $backup_created = write_file( $backup_file, $backup);

    $file_types = '*.'.$prefs["format"];
        $expire_time = 28800; // in minutes; 28800min = 20 Days

        foreach (glob($backup_path . $file_types) as $old_files) {

            $FileCreationTime = filectime($old_files);
            $FileAge = time() - $FileCreationTime;

            if ($FileAge > ($expire_time * 60)) {
                print "The file $old_files is older than $expire_time minutes\n";
                unlink($old_files);
            }
        }
        if($backup_created){
            $this->load->helper('download');
            force_download( $filename. "." . $prefs["format"], $backup);
            $response['status'] = TRUE;
            $response['file_name'] = $backup_path . $filename. "." . $prefs["format"];
        }else{
            $response['status'] = FALSE;
        }

        return $response;
    }
    public function getImageName($id)
    {
        $file_name = NULL;
        $this->db->select('file_name');
        $this->db->where('id', $id);
        $this->db->limit(1);
        $this->db->from('added_images');
        $query = $this->db->get();
        foreach ($query->result() as $row) {
            $file_name = $row->file_name;
        }
        return $file_name;
    }
    public function getImageId($name)
    {
        $id = NULL;
        $this->db->select('id');
        $this->db->where('file_name', $name);
        $this->db->limit(1);
        $this->db->from('added_images');
        $query = $this->db->get();
        foreach ($query->result() as $row) {
            $id = $row->id;
        }
        return $id;
    }
    public function getAddedImages(){

        $details = array();
        $this->db->select('*');
        $this->db->from("added_images");
        $query = $this->db->get();
        // echo $this->db->last_query();die();
        foreach ($query->result_array() as $row) {
            $details[] = $row;

        }
        return $details;

    }
    function deleteImages($id) 
    {
        $this->db->where('id', $id);
        $res = $this->db->delete('added_images');
        return $res;
    } 
}
